"use strict";var precacheConfig=[["/index.html","ae805bb397783cb99a4b48f2dbb31332"],["/static/css/main.65b168e7.css","b66710c362ee60d91b34f99747bfe47c"],["/static/js/main.9a4c4ecb.js","2795780bbc61ae07a24783ecc68fed3f"],["/static/media/adriana-belinski.d9b576ac.jpg","d9b576ac9c6af8723950f1dd82124e84"],["/static/media/banner.fc4924d9.jpg","fc4924d900dec7e6f591416aa86e4c31"],["/static/media/brandon-johnson.d3d4b89f.jpg","d3d4b89fc623ce439149ce9b025a4daa"],["/static/media/chelsey-mckinney.11d6538e.jpg","11d6538ee84dce692e2465df740f6dda"],["/static/media/garret-saarinen.b8400f02.jpg","b8400f026b3d31419f1cac5596172610"],["/static/media/icons-16.76957eb0.ttf","76957eb0b3f1dd52766872b7dd6c04d6"],["/static/media/icons-16.c22f3806.eot","c22f3806638273bd9e764fea0a812c51"],["/static/media/icons-16.d13388be.woff","d13388bee1190a551bb5d9c9f953a779"],["/static/media/icons-20.062208ea.eot","062208ea882dd2a7e2fa8552c6f32e3b"],["/static/media/icons-20.6d716ba4.ttf","6d716ba49663310796d6cf4d6d8b65b2"],["/static/media/icons-20.f56d7d34.woff","f56d7d3470cf9d60593812561aff63c4"],["/static/media/jenessa-white.808e5f09.jpg","808e5f09f6ac28e3c1efda4c90deb5ba"],["/static/media/kam-kubesh.7b0fa333.jpg","7b0fa333b868d5277a09c529b73c3504"],["/static/media/matt-decuir.65561e45.jpg","65561e455b8cec55f56bd705cf8b7246"],["/static/media/mplsjrdevs-logo-white.0e844814.svg","0e844814b2a47878d21d6ccd1537b78e"],["/static/media/mplsjrdevs1.0899b727.jpg","0899b72738395b0d90ec2938dbab3bc6"],["/static/media/sarah-cooke.77267e3e.jpg","77267e3e2af36475b0b2ece1f72c0915"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});